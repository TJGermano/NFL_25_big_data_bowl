import pandas as pd

# Set display options for pandas
pd.set_option('display.max_columns', None)
pd.set_option('display.max_rows', None)
pd.set_option('display.width', None)
pd.set_option('display.max_colwidth', 50)  # Set to 50 to make sure the column isn't too wide
pd.set_option('display.float_format', '{:.2f}'.format)

# Load datasets
games = pd.read_csv('games.csv')
plays = pd.read_csv('plays.csv')
player_play = pd.read_csv('player_play.csv')

# Select specific columns for the 'plays' dataframe where playId = 141
plays_columns = [
    "gameId", "playId", "playDescription", "quarter", "down", "yardsToGo",
    "possessionTeam", "defensiveTeam", "yardlineSide", "yardlineNumber", "gameClock"
]
# Total unique play IDs in the entire dataset
total_play_count = player_play['playId'].nunique()

# Unique play IDs where motion is True and player had a rush attempt
motion_and_rush_count = player_play[
    (player_play['motionSinceLineset'] == True) &
    (player_play['hadRushAttempt'] == 1)
]['playId'].nunique()

# Calculate percentage of total plays
percentage_motion_rush_total = (motion_and_rush_count / total_play_count) * 100

# Unique play IDs where motion is True (regardless of rush attempt)
total_motion_count = player_play[player_play['motionSinceLineset'] == True]['playId'].nunique()

# Calculate percentage of motion plays that are also rush attempts
percentage_motion_rush_of_motion = (motion_and_rush_count / total_motion_count) * 100

# Display results
print("Total unique play IDs in dataset:", total_play_count)
print("Unique play IDs where motion is True and player had a rush attempt:", motion_and_rush_count)
print("Percentage of total plays where player went in motion and had a rush attempt:", percentage_motion_rush_total)
print("Total unique play IDs where motion is True:", total_motion_count)
print("Percentage of motion plays where player had a rush attempt:", percentage_motion_rush_of_motion)
