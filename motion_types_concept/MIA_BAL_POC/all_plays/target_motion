import pandas as pd

# Set display options for pandas
pd.set_option('display.max_columns', None)
pd.set_option('display.max_rows', None)
pd.set_option('display.width', None)
pd.set_option('display.max_colwidth', None)
pd.set_option('display.float_format', '{:.2f}'.format)

# Load datasets
games = pd.read_csv('games.csv')
plays = pd.read_csv('plays.csv')
player_play = pd.read_csv('player_play.csv')

# Select specific columns for the 'plays' dataframe
plays_columns = [
    "gameId", "playId", "playDescription", "quarter", "down", "yardsToGo",
    "possessionTeam", "defensiveTeam", "yardlineSide", "yardlineNumber", "gameClock"
]

# Select specific columns for the 'player_play' dataframe
player_play_columns = [
    "playId", "nflId", "teamAbbr",
    "passingYards", "hadPassReception",
    "receivingYards", "wasTargettedReceiver", "yardageGainedAfterTheCatch",
    "inMotionAtBallSnap", "shiftSinceLineset", "motionSinceLineset", "wasRunningRoute", "hadPassReception"
]

## Filter rows where motion is true and target is true
filtered_data = player_play[
    (player_play['motionSinceLineset'] == False) &
    (player_play['wasTargettedReceiver'] == 1)
]
# Total unique play IDs in the entire dataset
total_play_count = player_play['playId'].nunique()

# Unique play IDs where motion is True and target is True
motion_and_target_count = player_play[
    (player_play['motionSinceLineset'] == True) &
    (player_play['wasTargettedReceiver'] == 1)
]['playId'].nunique()

# Calculate percentage
percentage_motion_target = (motion_and_target_count / total_play_count) * 100

# Display results
print("Total unique play IDs in dataset:", total_play_count)
print("Unique play IDs where motion is True and target is True:", motion_and_target_count)
print("Percentage of plays where player went in motion and was targeted:", percentage_motion_target)
